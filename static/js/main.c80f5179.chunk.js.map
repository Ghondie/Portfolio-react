{"version":3,"sources":["assets/moodmusic.png","assets/day.png","assets/password.png","assets/mountains.jpg","assets/project2.png","Componets/card/Card.js","Componets/Nav/Nav.js","Componets/Jumbotron/Jumbotron.js","Componets/Pages/Home.js","Componets/Pages/Portfolio.js","Componets/Bio/bio.js","Componets/Pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","card1","props","Card","style","width","Img","variant","src","require","Body","Title","Text","Button","href","target","NavigationBar","Nav","Item","to","Link","Jumbo","Jumbotron","Homepage","className","Portfolio","Bio","About","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c80f5179.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moodmusic.ea246099.png\";","module.exports = __webpack_public_path__ + \"static/media/day.bb9ee069.png\";","module.exports = __webpack_public_path__ + \"static/media/password.1397ec06.png\";","module.exports = __webpack_public_path__ + \"static/media/mountains.d8fc5b83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/project2.672f0664.png\";","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\n import image from \"../../assets/moodmusic.png\"\r\n\r\nconst card1 = (props) => {\r\n  return (\r\n    <div>\r\n     \r\n      <Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src={require('../../assets/moodmusic.png')}/>\r\n  <Card.Body>\r\n    <Card.Title>Mood Music</Card.Title>\r\n    <Card.Text>\r\n    A colabration project using 3 different API and bulma for styling. Search for some\r\n              music and lyrics are generated\r\n    </Card.Text>\r\n    <Button variant=\"primary\" href=\"https://mi544.github.io/mood-music/\" target=\"_blank\">Go somewhere</Button>\r\n  </Card.Body>\r\n</Card>\r\n\r\n\r\n<Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src={require('../../assets/day.png')}/>\r\n  <Card.Body>\r\n    <Card.Title>Work Day Planner</Card.Title>\r\n    <Card.Text>\r\n    A simple work planner using moment.js for current time updates.\r\n    </Card.Text>\r\n    <Button variant=\"primary\" href=\" https://ghondie.github.io/Day-planner/\" target=\"_blank\"> Go somewhere </Button>\r\n  </Card.Body>\r\n</Card>\r\n\r\n\r\n<Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src={require('../../assets/password.png')}/>\r\n  <Card.Body>\r\n    <Card.Title>Password Generato</Card.Title>\r\n    <Card.Text>\r\n    A simple password generator with prompts and alerts to make a complex password.\r\n    </Card.Text>\r\n    <Button variant=\"primary\" href=\"https://ghondie.github.io/Password-Gen/\" target=\"_blank\">Go somewhere</Button>\r\n  </Card.Body>\r\n</Card>\r\n\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default card1 ;","  \r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\n\r\nexport const NavigationBar= () => {\r\n  return(\r\n    <Nav>\r\n\r\n    <Nav.Item>\r\n     <Link to =\"/\"> <Nav.Link href=\"/\">Home</Nav.Link></Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n    <Link to =\"/Portfolio\"> <Nav.Link href=\"/Portfolio\">Portfolio</Nav.Link></Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n    <Link to =\"/About\">  <Nav.Link href=\"/About\">About</Nav.Link></Link>\r\n    </Nav.Item>\r\n\r\n  </Nav>\r\n)\r\n}\r\nexport default NavigationBar;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Mountains from '../../assets/mountains.jpg';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nexport const Jumbo = () => (\r\n \r\n<Jumbotron >\r\n{/* <Image src=\"holder.js/100px250\" fluid /> */}\r\n  <h1>Hello, world!</h1>\r\n  <p>\r\n  Welcome to my React Portfolio\r\n  </p>\r\n  <p>\r\n  \r\n  </p>\r\n</Jumbotron>\r\n  )\r\n  \r\n  export default Jumbo","import React from 'react';\r\nimport { Router, Route, Link } from 'react-router-dom';\r\nimport Nav from '../Nav/Nav'\r\nimport Card from '../card/Card'\r\nimport Jumbotron from '../Jumbotron/Jumbotron'\r\n\r\n\r\nconst Homepage= ()=>{\r\n    return(\r\n      <div className=\"APP\">\r\n        <header className=\"App-header\">\r\n        <Nav/>\r\n        <Jumbotron />\r\n    \r\n   \r\n        </header>\r\n        </div>\r\n    )\r\n}\r\nexport default Homepage;","import React from 'react';\r\nimport { Router, Route, Link } from 'react-router-dom';\r\nimport Nav from '../Nav/Nav'\r\nimport Card from '../card/Card'\r\n\r\n\r\n\r\nconst Portfolio= ()=>{\r\n    return(\r\n      <div className=\"APP\">\r\n        <header className=\"App-header\">\r\n        <Nav/>\r\n        <Card/>\r\n   \r\n        </header>\r\n        </div>\r\n    )\r\n}\r\nexport default Portfolio;","  \r\nimport React from 'react'\r\n\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport const Bio= () => (\r\n  // return (\r\n    <div>\r\n  <Card style={{ width: '18rem' }}>\r\n  <Card.Img variant=\"top\" src={require('../../assets/moodmusic.png')}/>\r\n  <Card.Body>\r\n    <Card.Title>Hey!</Card.Title>\r\n    <Card.Text>\r\n      Im Jared Schau. I am a former Geek Squad Agent turned coder. Ive leared the full MERN stack with a passion for front end. \r\n    </Card.Text>\r\n    <Button variant=\"primary\" href=\"https://mi544.github.io/mood-music/\" target=\"_blank\">Go somewhere</Button>\r\n  </Card.Body>\r\n</Card>\r\n\r\n    </div>\r\n\r\n    )\r\n    export default Bio","import React from 'react';\r\nimport { Router, Route, Link } from 'react-router-dom';\r\nimport Nav from '../Nav/Nav'\r\nimport Bio from '../Bio/bio'\r\n\r\n\r\nconst About= ()=>{\r\n    return(\r\n      <div className=\"APP\">\r\n        <header className=\"App-header\">\r\n        <Nav/>\r\n        <Bio/>\r\n   \r\n        </header>\r\n        </div>\r\n    )\r\n}\r\nexport default About;","  \nimport React, { Component } from 'react';\nimport './App.css'\nimport {BrowserRouter as Router, Route, Link } from 'react-router-dom';\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Carousel  from './Componets/card/Card';\nimport Homepage from './Componets/Pages/Home'\nimport Portfolio from './Componets/Pages/Portfolio'\nimport About from './Componets/Pages/About'\n// import Homepage from './Componets/Pages/Home'\n// import Homepage from './Componets/Pages/Home'\nimport Nav from './Componets/Nav/Nav';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport image from '../src/assets/project2.png'\n\n\nfunction App(){\n  return(\n    <div className=\"App\">\n    <Router>\n    <Route exact path=\"/\" component={Homepage}/>\n    <Route exact path=\"/Portfolio\" component={Portfolio}/>\n    <Route exact path=\"/About\" component={About}/>\n    </Router>\n\n      </div>\n  )\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}